{"version":3,"sources":["webpack:///./src/views/Auth.vue","webpack:///./src/use/login-form.js","webpack:///./src/views/Auth.vue?8a7f"],"names":["for","class","onSubmit","eError","type","id","email","eBlur","pError","password","pBlur","disabled","isSubmitting","useLoginForm","useForm","handleSubmit","store","useStore","router","useRouter","MIN_PASSWORD","valYup","yup","trim","required","min","useField","value","errorMessage","handleBlur","val","dispatch","push","data","this","$route","query","message","$store","error","render"],"mappings":"2IAEM,eAAwB,UAApB,mBAAe,G,EAGf,eAAgC,SAAzBA,IAAI,SAAQ,SAAK,G,YAMxB,eAAoC,SAA7BA,IAAI,YAAW,UAAM,G,0DAVpC,eAgBO,QAhBDC,MAAM,OAAQ,SAAM,8CAAU,EAAAC,UAAA,EAAAA,SAAA,qBAAQ,e,CACxC,EAEA,eAIM,OAJAD,MAAK,yBAA8B,EAAAE,U,CACrC,E,eACA,eAA6D,SAAtDC,KAAK,QAAQC,GAAG,Q,qDAAiB,EAAAC,MAAK,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAd,EAAAD,SAC3B,EAAAH,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAGlC,eAIM,OAJAF,MAAK,yBAA8B,EAAAO,U,CACrC,E,eACA,eAAsE,SAA/DJ,KAAK,WAAWC,GAAG,W,qDAAoB,EAAAI,SAAQ,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAjB,EAAAD,YACjC,EAAAD,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAGlC,eAAmE,UAA3DP,MAAM,cAAeU,SAAU,EAAAC,cAAc,QAAK,iB,0FCXzD,SAASC,IACZ,MAAuCC,iBAA/BC,EAAR,EAAQA,aAAcH,EAAtB,EAAsBA,aACtBI,EAAQC,iBACRC,EAASC,iBAEHC,EAAe,EACfC,EAAS,CACXf,MAAOgB,SAEFC,OACAC,SAAS,4CACTlB,MAAM,uEACXG,SAAUa,SAELC,OACAC,SAAS,mCACTC,IAAIL,EAJC,sCAI4CA,EAJ5C,eAOd,EAAkEM,eAAS,QAASL,EAAOf,OAA5EA,EAAf,EAAQqB,MAA4BxB,EAApC,EAAsByB,aAAkCrB,EAAxD,EAA4CsB,WAA5C,EAC+DH,eAAS,WAAYL,EAAOZ,UAAlFA,EADT,EACEkB,MAA+BnB,EADjC,EACmBoB,aAAkClB,EADrD,EACyCmB,WAEnC3B,EAAWa,EAAY,yDAAE,WAAMe,GAAN,iGACrBd,EAAMe,SAAS,aAAcD,GADR,OAE3BZ,EAAOc,KAAK,KAFe,2CAAF,uDAK7B,MAAO,CACH1B,QACAH,SACAI,QACAE,WACAD,SACAE,QACAR,WACAU,gB,gBDhBO,GACXqB,KADW,WASP,OAPIC,KAAKC,OAAOC,MAAMC,SAClBH,KAAKI,OAAOP,SAAS,aAAc,CAC/BJ,MAAO,OAAAY,EAAA,MAAML,KAAKC,OAAOC,MAAMC,SAC/BjC,KAAM,YAIPS,ME9Bf,EAAO2B,OAASA,EAED","file":"js/chunk-2d0be70b.9ca09cd6.js","sourcesContent":["<template>\r\n  <form class=\"card\" @submit.prevent=\"onSubmit\">\r\n      <h1>Войти в систему</h1>\r\n\r\n      <div :class=\"['form-control', { invalid: eError }]\">\r\n          <label for=\"email\">Email</label>\r\n          <input type=\"email\" id=\"email\" v-model=\"email\" @blur=\"eBlur\">\r\n          <small v-if=\"eError\">{{ eError }}</small>\r\n      </div>\r\n\r\n      <div :class=\"['form-control', { invalid: pError }]\">\r\n          <label for=\"password\">Пароль</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"password\" @blur=\"pBlur\">\r\n          <small v-if=\"pError\">{{ pError }}</small>\r\n      </div>\r\n      \r\n      <button class=\"btn primary\" :disabled=\"isSubmitting\">Войти</button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { useLoginForm } from '../use/login-form'\r\nimport { error } from '../utils/error'\r\n\r\nexport default {\r\n    data() {\r\n        if (this.$route.query.message) {\r\n            this.$store.dispatch('setMessage', {\r\n                value: error(this.$route.query.message),\r\n                type: 'warning'\r\n            });\r\n        }\r\n\r\n        return useLoginForm()\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import * as yup from 'yup'\r\nimport { useField, useForm } from 'vee-validate'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\n\r\nexport function useLoginForm() {\r\n    const { handleSubmit, isSubmitting } = useForm(),\r\n    store = useStore(),\r\n    router = useRouter();\r\n        \r\n    const MIN_PASSWORD = 6;\r\n    const valYup = { \r\n        email: yup\r\n            .string()\r\n            .trim()\r\n            .required('Пожалуйста, заполните электронную почту.')\r\n            .email('Пожалуйста, проверьте, правильно ли указан адрес электронной почты.'),\r\n        password: yup\r\n            .string()\r\n            .trim()\r\n            .required('Пожалуйста, введите ваш пароль.')\r\n            .min(MIN_PASSWORD, `Пароль не может быть меньше ${MIN_PASSWORD} символов`)\r\n    }\r\n\r\n    const { value: email, errorMessage: eError, handleBlur: eBlur } = useField('email', valYup.email),\r\n    { value: password, errorMessage: pError, handleBlur: pBlur } = useField('password', valYup.password);\r\n\r\n    const onSubmit = handleSubmit( async val => {\r\n        await store.dispatch('auth/login', val);\r\n        router.push('/');\r\n    });\r\n    \r\n    return {\r\n        email,\r\n        eError,\r\n        eBlur,\r\n        password,\r\n        pError,\r\n        pBlur,\r\n        onSubmit,\r\n        isSubmitting\r\n    }\r\n}","import { render } from \"./Auth.vue?vue&type=template&id=d5420700\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}